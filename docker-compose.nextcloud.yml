version: '3'

services:
  db:
    image: postgres:14-alpine
    restart: always
    volumes:
      - ${my_volumes_root}/nextcloud_db:/var/lib/postgresql/data
    env_file:
      - nextcloud-db.env

  redis:
    image: redis:alpine
    restart: always

  app:
    image: nextcloud:25-apache
    restart: always
    # ports:
    #   - 8080:80 # Just for debugging
    volumes:
      - ${my_volumes_root}/nextcloud_root:/var/www/html
      - ${my_volumes_root}/nextcloud_data:/var/www/html/data
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - VIRTUAL_HOST=cloud
      - NEXTCLOUD_TRUSTED_DOMAINS=cloud.lan cloud cloud.local
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=password
      - OVERWRITEPROTOCOL=https
    env_file:
      - nextcloud-db.env
    depends_on:
      - db
      - redis

  cron:
    image: nextcloud:25-apache
    restart: always
    volumes_from:
      - app
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

  proxy:
    build: ./proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${my_volumes_root}/certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - app


  # self-signed
#  omgwtfssl:
#    image: omgwtfssl:armhf # paulczar/omgwtfssl
#    build:
#      context: https://github.com/lil5/omgwtfssl.git
#      args:
#        buildno: 1
#        gitcommithash: de2a9ae
#    restart: "no"
#    volumes:
#      - ${my_volumes_root}/certs:/certs
#    environment:
#      - SSL_SUBJECT=example.com
#      - CA_SUBJECT=my@example.com
#      - SSL_KEY=/certs/cloud.key
#      - SSL_CSR=/certs/cloud.csr
#      - SSL_CERT=/certs/cloud.crt


volumes:
  vhost.d:
  html:

